""" –ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–∞–º telegram-–±–æ—Ç. """

from aiogram import Bot, Dispatcher, executor, types

import files
import config
from middlewares import AccessMiddleware
from keyboards import markup
from send_email import send_email, get_message

bot = Bot(config.TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(AccessMiddleware(config.MY_ID))


@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    """ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è/–ø–æ–º–æ—â–∏. """
    await message.answer(
        "–ë–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email'–æ–≤"
        "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email, –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ/—Ç–µ–∫—Å—Ç\n"
        "/send —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email —Å–æ–æ–±—â–µ–Ω–∏–µ,\n"
        "/cancel —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.\n\n"
        "–ê —Ç–∞–∫–∂–µ: \n"
        "/sender - –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è,\n"
        "/receiver -  –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è,\n"
        "/password - –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å.\n"
    )


@dp.message_handler(commands=['send'])
async def send(message: types.Message):
    """ –§–æ—Ä–º–∏—Ä—É–µ—Ç email —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ. """
    if list(config.DOWNLOAD_PATH.iterdir()):  # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –Ω–µ –ø—É—Å—Ç–∞
        msg = await bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤–∫–∞...")
        email_message = get_message(config.DOWNLOAD_PATH)
        send_email(config.SENDER,
                   config.RECEIVER,
                   config.PASSWORD,
                   email_message)
        await msg.edit_text("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ")
        files.clear_folder(config.DOWNLOAD_PATH)
    else:  # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –ø—É—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—á–µ–≥–æ
        await bot.send_message(message.from_user.id, "–ù–µ—á–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å ü§∑‚Äç‚ôÄ\n"
                                                     "–ü—Ä–∏—à–ª–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å "
                                                     "–∏ —Ç–æ–≥–¥–∞ —è –æ—Ç–ø—Ä–∞–≤–ª—é —ç—Ç–æ.")


@dp.message_handler(commands=['cancel'])
async def cancel_sending(message: types.Message):
    """ –°—Ç–∏—Ä–∞–µ—Ç –≤—Å–µ –≤–Ω–µ—Å–µ–Ω–Ω—ã–µ –≤ email —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ. """
    files.clear_folder(config.DOWNLOAD_PATH)
    await bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚ùå")


@dp.message_handler(commands=['sender'])
async def set_sender(message: types.Message):
    """ –ò–∑–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª. –ø–æ—á—Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è. """
    if len(message.text.split()) == 2:
        config.SENDER = message.text.split()[1]
        await bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω ‚úÖ")
    else:
        await bot.send_message(message.from_user.id,
                               "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã ‚ùå\n"
                               "–í–≤–µ–¥–∏ /sender –∏ email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.\n"
                               "–ù–∞–ø—Ä–∏–º–µ—Ä, /sender name@email.com")


@dp.message_handler(commands=['receiver'])
async def set_receiver(message: types.Message):
    """ –ò–∑–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª. –ø–æ—á—Ç—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—è. """
    if len(message.text.split()) == 2:
        config.RECEIVER = message.text.split()[1]
        await bot.send_message(message.from_user.id, "–ü–æ–ª—É—á–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω ‚úÖ")
    else:
        await bot.send_message(message.from_user.id,
                               "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã ‚ùå\n"
                               "–í–≤–µ–¥–∏ /receiver –∏ email –ø–æ–ª—É—á–∞—Ç–µ–ª—è.\n"
                               "–ù–∞–ø—Ä–∏–º–µ—Ä, /receiver name@email.com")


@dp.message_handler(commands=['password'])
async def set_password(message: types.Message):
    """ –ò–∑–º–µ–Ω—è–µ—Ç –ø–∞—Ä–æ–ª—å –æ—Ç —ç–ª. –ø–æ—á—Ç—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è. """
    if len(message.text.split()) == 2:
        config.PASSWORD = message.text.split()[1]
        await bot.send_message(message.from_user.id, "–ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω ‚úÖ")
    else:
        await bot.send_message(message.from_user.id,
                               "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã ‚ùå\n"
                               "–í–≤–µ–¥–∏ /password –∏ –ø–∞—Ä–æ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.\n"
                               "–ù–∞–ø—Ä–∏–º–µ—Ä, /password 12345678")


@dp.message_handler(content_types=['photo'])
async def download_photo(message: types.Message):
    """ –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. """
    if message.caption:
        files.download_text(message.caption,
                            config.DOWNLOAD_PATH / 'message_text.txt')
        await bot.send_message(message.from_user.id, "–¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∂–µ–Ω")

    image_id = message.photo[-1].file_id
    image = await bot.get_file(image_id)
    image_path = image.file_path
    download_path = config.DOWNLOAD_PATH / files.get_name_for_file('png')
    await bot.download_file(image_path, download_path)
    await bot.send_message(message.from_user.id, "–§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ",
                           reply_markup=markup)


@dp.message_handler(content_types=['text'])
async def download_text(message: types.Message):
    """ –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª. """
    files.download_text(message.text,
                        config.DOWNLOAD_PATH / 'message_text.txt')
    await bot.send_message(message.from_user.id, "–¢–µ–∫—Å—Ç –∑–∞–ø–∏—Å–∞–Ω",
                           reply_markup=markup)


if __name__ == '__main__':
    files.make_dir(config.DOWNLOAD_PATH)
    executor.start_polling(dp, skip_updates=True)
